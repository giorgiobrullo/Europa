name: Unity Actions

on:
  pull_request:
    paths-ignore:
      - 'README.md'
  push:
    paths-ignore:
      - 'README.md'
  workflow_dispatch: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  buildLinux:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    name: Build for StandaloneLinux64
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-StandaloneLinux64
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: StandaloneLinux64
      - uses: actions/upload-artifact@v3
        with:
          name: Build-StandaloneLinux64
          path: build

  # Temp disable macos because it takes a loooong time
  # buildMac:
  #   if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
  #   name: Build for StandaloneOSX
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - uses: actions/cache@v3
  #       with:
  #         path: Library
  #         key: Library-StandaloneOSX
  #     - uses: game-ci/unity-builder@v4
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         targetPlatform: StandaloneOSX
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: Build-StandaloneOSX
  #         path: build

  # buildWindows:
  #   if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
  #   name: Build for Windows Platforms
  #   runs-on: windows-latest
  #   strategy:
  #     matrix:
  #       targetPlatform: [StandaloneWindows, StandaloneWindows64, WSAPlayer]
  #     fail-fast: false
  #   timeout-minutes: 60
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         lfs: true
  #     - uses: actions/cache@v3
  #       with:
  #         path: Library
  #         key: Library-${{ matrix.targetPlatform }}
  #     - uses: game-ci/unity-builder@v4
  #       env:
  #         UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  #         UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
  #         UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
  #       with:
  #         targetPlatform: ${{ matrix.targetPlatform }}
  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: Build-${{ matrix.targetPlatform }}
  #         path: build

  release:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [buildLinux]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Install GitHub CLI
        run: sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Create Tag and Release
        id: create_release
        run: |
          TAG_NAME=v0.1.${{ github.run_number }}
          gh release create $TAG_NAME --title "Release $TAG_NAME" --notes "Automated release by GitHub Actions"
          echo "::set-output name=tag::$TAG_NAME"

      - name: Download Linux Build
        uses: actions/download-artifact@v3
        with:
          name: Build-StandaloneLinux64
          path: ./build/StandaloneLinux64

    #  - name: Download macOS Build
    #    uses: actions/download-artifact@v3
    #    with:
    #      name: Build-StandaloneOSX
    #      path: ./build/StandaloneOSX

      - name: Download Windows Build (Standalone)
        uses: actions/download-artifact@v3
        with:
          name: Build-StandaloneWindows
          path: ./build/StandaloneWindows

      - name: Download Windows Build (Standalone64)
        uses: actions/download-artifact@v3
        with:
          name: Build-StandaloneWindows64
          path: ./build/StandaloneWindows64

      - name: Download WSAPlayer Build
        uses: actions/download-artifact@v3
        with:
          name: Build-WSAPlayer
          path: ./build/WSAPlayer

      - name: Upload Linux Build to Release
        run: gh release upload ${{ steps.create_release.outputs.tag }} ./build/StandaloneLinux64/*

     # - name: Upload macOS Build to Release
     #   run: gh release upload ${{ steps.create_release.outputs.tag }} ./build/StandaloneOSX/*

      - name: Upload Windows Build (Standalone) to Release
        run: gh release upload ${{ steps.create_release.outputs.tag }} ./build/StandaloneWindows/*

      - name: Upload Windows Build (Standalone64) to Release
        run: gh release upload ${{ steps.create_release.outputs.tag }} ./build/StandaloneWindows64/*

      - name: Upload WSAPlayer Build to Release
        run: gh release upload ${{ steps.create_release.outputs.tag }} ./build/WSAPlayer/*
